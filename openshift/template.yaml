apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: assisted-events-scrape
objects:
# Assisted events scrape k8s manifests
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: assisted-events-scrape
  spec:
    selector:
      matchLabels:
        app: assisted-events-scrape
    replicas: ${{REPLICAS_COUNT}}
    template:
      metadata:
        labels:
          app: assisted-events-scrape
      spec:
        serviceAccountName: assisted-service
        containers:
        - name: assisted-events-scrape
          image: ${IMAGE_NAME}:${IMAGE_TAG}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          envFrom:
            - secretRef:
                name: events-scrape
          env:
          - name: EVENT_STORE_CLUSTER_EVENTS_IGNORE_FIELDS
            value: "${EVENT_STORE_CLUSTER_EVENTS_IGNORE_FIELDS}"
          - name: SENTRY_DSN
            value: "${SENTRY_DSN}"
          - name: SENTRY_RELEASE
            value: "${IMAGE_TAG}"
          - name: MAX_IDLE_MINUTES
            value: "${MAX_IDLE_MINUTES}"
          - name: ERRORS_BEFORE_RESTART
            value: "${ERRORS_BEFORE_RESTART}"
          - name: N_WORKERS
            value: "${N_WORKERS}"
          - name: LOGLEVEL
            value: "${LOGLEVEL}"
          - name: ES_SERVER
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: assisted-installer-elasticsearch
          - name: ES_INDEX_PREFIX
            value: "${ES_INDEX_PREFIX}"
          - name: ES_USER
            valueFrom:
              secretKeyRef:
                key: ${SCRAPER_ES_USER_SECRET_KEY}
                name: ${SCRAPER_ES_USER_SECRET_NAME}
          - name: ES_PASS
            valueFrom:
              secretKeyRef:
                key: ${SCRAPER_ES_PASSWORD_SECRET_KEY}
                name: ${SCRAPER_ES_PASSWORD_SECRET_NAME}
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    name: ccx-export
  spec:
    suspend: ${{CCX_EXPORT_CRON_SUSPEND}}
    schedule: "${CCX_EXPORT_CRON_TIME}"
    jobTemplate:
      spec:
        ttlSecondsAfterFinished: 600
        template:
          spec:
            volumes:
            - name: temp
              emptyDir: {}
            containers:
            - name: ccx-s3-export
              image: ${IMAGE_NAME}:${IMAGE_TAG}
              imagePullPolicy: ${IMAGE_PULL_POLICY}
              resources:
                limits:
                  memory: ${CCX_EXPORT_MEMORY_LIMIT}
                  cpu: ${CCX_EXPORT_CPU_LIMIT}
                requests:
                  memory: ${CCX_EXPORT_MEMORY_REQUEST}
                  cpu: ${CCX_EXPORT_CPU_REQUEST}
              command:
              - ccx_export
              volumeMounts:
              - mountPath: /tmp
                name: temp
              env:
              - name: TMPDIR
                value: /tmp
              - name: LOGLEVEL
                value: "${CCX_EXPORT_LOGLEVEL}"
              - name: EVENT_EXPORT_STREAM_CHUNK_SIZE
                value: ${EVENT_EXPORT_STREAM_CHUNK_SIZE}
              - name: AWS_S3_BUCKET
                valueFrom:
                  secretKeyRef:
                    key: bucket
                    name: ${AWS_S3_SECRET_NAME}
              - name: AWS_S3_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    key: endpoint
                    name: ${AWS_S3_SECRET_NAME}
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    key: aws_access_key_id
                    name: ${AWS_S3_SECRET_NAME}
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    key: aws_secret_access_key
                    name: ${AWS_S3_SECRET_NAME}
              - name: ES_SERVER
                valueFrom:
                  secretKeyRef:
                    key: endpoint
                    name: assisted-installer-elasticsearch
              - name: ES_USER
                valueFrom:
                  secretKeyRef:
                    key: ${SCRAPER_ES_USER_SECRET_KEY}
                    name: ${SCRAPER_ES_USER_SECRET_NAME}
              - name: ES_PASS
                valueFrom:
                  secretKeyRef:
                    key: ${SCRAPER_ES_PASSWORD_SECRET_KEY}
                    name: ${SCRAPER_ES_PASSWORD_SECRET_NAME}
            restartPolicy: OnFailure
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    name: ccx-export-cleanup
  spec:
    suspend: ${{CCX_EXPORT_CLEANUP_CRON_SUSPEND}}
    schedule: "${CCX_EXPORT_CLEANUP_CRON_TIME}"
    jobTemplate:
      spec:
        ttlSecondsAfterFinished: 600
        template:
          spec:
            containers:
            - name: ccx-s3-export-cleanup
              image: ${IMAGE_NAME}:${IMAGE_TAG}
              imagePullPolicy: ${IMAGE_PULL_POLICY}
              resources:
                limits:
                  memory: ${CCX_EXPORT_CLEANUP_MEMORY_LIMIT}
                  cpu: ${CCX_EXPORT_CLEANUP_CPU_LIMIT}
                requests:
                  memory: ${CCX_EXPORT_CLEANUP_MEMORY_REQUEST}
                  cpu: ${CCX_EXPORT_CLEANUP_CPU_REQUEST}
              command:
              - ccx_export_cleanup
              env:
              - name: AWS_S3_BUCKET
                valueFrom:
                  secretKeyRef:
                    key: bucket
                    name: ${AWS_S3_SECRET_NAME}
              - name: AWS_S3_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    key: endpoint
                    name: ${AWS_S3_SECRET_NAME}
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    key: aws_access_key_id
                    name: ${AWS_S3_SECRET_NAME}
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    key: aws_secret_access_key
                    name: ${AWS_S3_SECRET_NAME}
            restartPolicy: OnFailure
parameters:
- name: IMAGE_NAME
  value: quay.io/app-sre/assisted-events-scrape
- name: IMAGE_TAG
  value: ''
  required: true
- name: REPLICAS_COUNT
  value: "1"
- name: ES_INDEX_PREFIX
  value: 'assisted-service-events-v3-'
- name: SENTRY_DSN
  value: ''
- name: MAX_IDLE_MINUTES
  value: '120'
- name: ERRORS_BEFORE_RESTART
  value: '10000'
- name: N_WORKERS
  value: '5'
- name: LOGLEVEL
  value: 'INFO'
- name: CCX_EXPORT_LOGLEVEL
  value: 'DEBUG'
- name: IMAGE_PULL_POLICY
  value: 'Always'
- name: AWS_S3_SECRET_NAME
  value: 'ai-ccx-integration'
- name: EVENT_EXPORT_STREAM_CHUNK_SIZE
  value: "1000"
- name: EVENT_STORE_CLUSTER_EVENTS_IGNORE_FIELDS
  value: "hosts.*.connectivity,hosts.*.inventory,hosts.*.progress,hosts.*.checked_in_at,hosts.*.updated_at,hosts.*.validations_info,hosts.*.ntp_sources,controller_logs_collected_at,controller_logs_started_at,updated_at,connectivity_majority_groups"
- name: MEMORY_LIMIT
  value: "1000Mi"
  required: false
- name: CPU_LIMIT
  value: "1"
  required: false
- name: MEMORY_REQUEST
  value: "400Mi"
  required: false
- name: CPU_REQUEST
  value: "250m"
  required: false
- name: SCRAPER_ES_USER_SECRET_NAME
  value: elastic-master-credentials
- name: SCRAPER_ES_USER_SECRET_KEY
  value: master_user_name
- name: SCRAPER_ES_PASSWORD_SECRET_NAME
  value: elastic-master-credentials
- name: SCRAPER_ES_PASSWORD_SECRET_KEY
  value: master_user_password
- name: CCX_EXPORT_CRON_TIME
  value: "0 2 * * *"
- name: CCX_EXPORT_CRON_SUSPEND
  value: "false"
- name: CCX_EXPORT_MEMORY_REQUEST
  value: "2Gi"
- name: CCX_EXPORT_CPU_REQUEST
  value: "1"
- name: CCX_EXPORT_MEMORY_LIMIT
  value: "2Gi"
- name: CCX_EXPORT_CPU_LIMIT
  value: "1"
- name: CCX_EXPORT_CLEANUP_CRON_SUSPEND
  value: "true"
- name: CCX_EXPORT_CLEANUP_CRON_TIME
  value: "0 8 * * *"
- name: CCX_EXPORT_CLEANUP_MEMORY_REQUEST
  value: "128Mi"
- name: CCX_EXPORT_CLEANUP_CPU_REQUEST
  value: "10m"
- name: CCX_EXPORT_CLEANUP_MEMORY_LIMIT
  value: "256Mi"
- name: CCX_EXPORT_CLEANUP_CPU_LIMIT
  value: "1"
